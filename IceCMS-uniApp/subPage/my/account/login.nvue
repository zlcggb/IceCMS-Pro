<template>
	<view class="container">
		<view class="bg bg-color-base margin-b20"></view>
		<view class="tab vs-row vs-align-center">
			<image class="tab-bg" src="/static/banner-icon.png" mode=""></image>
			<view class="vs-row vs-align-center">
				<view class="vs-column vs-align-center margin-r40" @click="cur = 0">
					<text class="font-50 margin-b20" :class="[cur ? 'color-black-3': 'color-base']">登录</text>
					<view class="line bg-color-base" v-if="!cur"></view>
				</view>
				<view class="vs-column vs-align-center" @click="cur = 1">
					<text class="font-46 margin-b20" :class="[cur ? 'color-base': 'color-black-3']">注册</text>
					<view class="line bg-color-base" v-if="cur"></view>
				</view>
			</view>
		</view>
		<view class="login margin-b80" v-if="!cur">
			<view class="input vs-row vs-align-center margin-b40">
				<image class="input-icon margin-r20" src="/static/common/account.png" mode="widthFix"></image>
				<u--input placeholder="请输入您的账号或昵称" border="none" clearable placeholderStyle="color:#625d59;"
					v-model="loginForm.username" :maxlength="11"></u--input>
			</view>
			<view class="input vs-row vs-align-center margin-b40">
				<image class="input-icon margin-r20" src="/static/common/pass.png" mode="widthFix"></image>
				<u--input placeholder="请输入您的登录密码" border="none" clearable password placeholderStyle="color:#625d59;"
					v-model="loginForm.password" :maxlength="18"></u--input>
			</view>
		</view>
		<view class="register margin-b80" v-if="cur">
			<view class="input vs-row vs-align-center margin-b40">
				<image class="input-icon margin-r20" src="/static/common/account.png" mode=""></image>
				<u--input placeholder="请输入您的昵称" border="none" clearable placeholderStyle="color:#625d59;"
					v-model="user.name" :maxlength="11"></u--input>
			</view>
			<text class="ts">* 可任意混合</text>
			<view class="input vs-row vs-align-center margin-b40">
				<image class="input-icon margin-r20" src="/static/common/account.png" mode=""></image>
				<u--input placeholder="请输入您的账号" border="none" clearable placeholderStyle="color:#625d59;"
					v-model="user.user" :maxlength="11"></u--input>
			</view>
			<text class="ts">* 账号长度5~11位，不支持中文和特殊字符</text>
			<view class="input vs-row vs-align-center margin-b40">
				<image class="input-icon margin-r20" src="/static/common/pass.png" mode=""></image>
				<u--input placeholder="请输入您的登录密码" border="none" clearable password placeholderStyle="color:#625d59;"
					v-model="user.password" :maxlength="18"></u--input>
			</view>
			<text class="ts">* 密码长度最少6位,最长18位，不支持中文以及.-*_以外特殊字符</text>
			<view class="input vs-row vs-align-center margin-b40">
				<image class="input-icon margin-r20" src="/static/common/pass.png" mode=""></image>
				<u--input placeholder="请再次输入密码" border="none" clearable password placeholderStyle="color:#625d59;"
					v-model="user.password1" :maxlength="18"></u--input>
			</view>
			<text class="ts">* 重复密码</text>
		</view>
		<view class="button bg-color-base vs-row vs-align-center vs-space-center margin-b20" @click="userLogin()">
			<text class="color-white font-34">立即{{ cur ? '注册': '登录' }}</text>
		</view>
		<view class="vs-row vs-align-center vs-space-center margin-b100">
			<text class="color-base font-28" @click="wjmm()">忘记密码？</text>
		</view>
	</view>
</template>
<script>
	
	import API from '../../../utils/api.js';
	export default {
		data() {
			return {
				cur: 0,
				loginForm: {
					username: '', //账号
					password: '',
				},
				userName: '',
				zhanghao: '',
				password: '',
				user: {
					name: '',
					user: '',
					password: '',
					password1: '',
					markcode: '',
					app: 10000
				},
				
			}
		},
		onLoad() {
			this.user.markcode = Math.round(Math.random() * 10000000)
		},
		methods: {
			wjmm: function() {
				// uni.navigateTo({
				// 	url: "forget"
				// })
			},
			userLogin() {
				// console.log("要判断是不是登录的" + this.cur)
				if (this.cur == 0) {
					uni.showLoading({
						title: "登录中..."
					})
					uni.request({
						url: API.Login(),
						data: this.loginForm,
						 method: 'get',
						success: res => {
							if (res.data.code == 200) {
								//拿到token 把token存起来
								uni.setStorageSync('access-admin',JSON.stringify(res.data.data));
								uni.setStorageSync('SET_ISLOGIN', true);
					
									uni.switchTab({
										url: "../my"
									})
									uni.hideLoading();
									uni.showToast({
										title: "登录成功",
										icon: "success"
									})
									}
								 if (res.data.code == 400)  {
									uni.hideLoading();
									uni.showToast({
										title: res.msg,
										icon: "none"
									})
						}
						}
					})
					
				} else {
					// console.log(this.user.password)
					var pass1 = this.user.password;
					var pass2 = this.user.password1;
					console.log(this.password1)
					if (pass1 == pass2) {
						uni.showLoading({
							title: "注册中..."
						})
						user.actions.zhuce(this.cur, this.user).then(res => {
							console.log(res.data)
							if (res.code == 200) {
								uni.hideLoading();
								uni.showToast({
									title: "注册成功！",
									icon: "success"
								})
								this.cur = 0
							} else {
								uni.hideLoading();
								uni.showToast({
									title: res.msg,
									icon: "none"
								})
							}
						})
					} else if (pass2 == '') {
						uni.showToast({
							title: "请重复输入密码！",
							icon: "none"
						})
					} else {
						uni.showToast({
							title: "两次密码不一致！",
							icon: "none"
						})
					}
				}
			}
		}
	}
</script>
<style lang="scss">
	.container {
		position: relative;
	}

	.bg {
		position: relative;
		width: 750rpx;
		height: 400rpx;
	}

	.ts {
		color: #ff2326;
		font-size: 10px;
		margin-top: -15px;
		margin-bottom: 10px;
		margin-left: 10px;
	}

	.tab {
		position: absolute;
		top: 250rpx;
		left: 20rpx;
		right: 20rpx;
		height: 150rpx;
		padding: 0 50rpx;
		background-color: #fff;
		border-top-left-radius: 20rpx;
		border-top-right-radius: 20rpx;

		&-bg {
			position: absolute;
			top: -200rpx;
			right: -50rpx;
			width: 440rpx;
			height: 285rpx;
		}
	}

	.line {
		width: 25rpx;
		height: 7rpx;
	}

	.login,
	.register {
		padding: 0 60rpx;
	}

	.input {
		width: 630rpx;
		height: 90rpx;
		padding: 0 30rpx;
		background-color: rgba(80, 100, 235, 0.1);
		border-radius: 8px;

		&-icon {
			width: 38rpx;
			height: 38rpx;
		}
	}

	.button {
		width: 630rpx;
		height: 90rpx;
		margin-left: 60rpx;
		border-radius: 18px;
	}

	.separator {
		height: 2rpx;
		margin: 0 30rpx;
		background-color: #f5f5f5;
	}

	.other {
		&-items {
			padding: 0 200rpx;
		}

		&-icon {
			width: 50rpx;
			height: 50rpx;
		}
	}
</style>
